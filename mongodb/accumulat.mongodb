
//$accumulator funciones dentro de funciones
// sus llaves son: init -> como se inivializa
//accumulate-> como queremos juntar 
//merge-> acumular y guardar el resultado final (sirve para trabajar en paralelo)
//finalize-> que regresa
//lang-> en que idioma esta el codigo
//args-> que recive

use('sample_airbnb');

db.listingsAndReviews.aggregate([
    {
        $match: {
            "review_scores.review_scores_rating": {$gt: 90}
        }
    },
    {
        $addFields: {
            amenitiesSize: {$size: "$amenities"}
        }
    },
    {
        $group: {
            _id: null, //solo se puede con accumulator porque la funcion esoje el campo y regresar el valor
            media: {
                $accumulator: {
                    init: function(){//inicializar
                        return {sum: 0, count: 0};
                    },
                    accumulateArgs: ["$amenitiesSize"] ,
                    accumulate: function(state, size){
                        return {sum: state.sum+size, count: state.count +1};
                    },
                    merge: function(state1, state2){
                        return {
                            sum: state1.sum + state2.sum,
                            count: state1.count + state2.count
                        };
                    },
                    finalize: function(state){
                        return state.sum / state.count;
                    },
                    lang: "js"
                }
            }
        }
    }
]);
//no corre porque atlas no soporta funciones ni accumulator